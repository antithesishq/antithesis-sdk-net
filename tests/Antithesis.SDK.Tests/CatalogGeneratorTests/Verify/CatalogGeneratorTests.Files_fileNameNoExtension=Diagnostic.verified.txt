{
  Diagnostics: [
    {
      Location: : (8,12)-(8,47),
      Message: The expression passed as an argument to this Assert "message" parameter is ambiguous.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS003,
        Title: "message" is ambiguous.,
        MessageFormat: The expression passed as an argument to this Assert "message" parameter is ambiguous.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (9,12)-(9,50),
      Message: The expression passed as an argument to this Assert "message" parameter is ambiguous.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS003,
        Title: "message" is ambiguous.,
        MessageFormat: The expression passed as an argument to this Assert "message" parameter is ambiguous.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (10,12)-(10,44),
      Message: The expression passed as an argument to this Assert "message" parameter is ambiguous.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS003,
        Title: "message" is ambiguous.,
        MessageFormat: The expression passed as an argument to this Assert "message" parameter is ambiguous.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (11,12)-(11,44),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (12,12)-(12,60),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (15,12)-(15,46),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (17,12)-(17,44),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (18,12)-(18,58),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (19,12)-(19,61),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (20,12)-(20,41),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (22,12)-(22,38),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (23,12)-(23,40),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (24,12)-(24,48),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (26,12)-(26,37),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: : (27,12)-(27,40),
      Message: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
      Severity: Error,
      Descriptor: {
        Id: ANTITHESIS005,
        Title: "message" must be a non-null literal or a const field.,
        MessageFormat: The expression passed as an argument to any Assert "message" parameter must be a non-null literal or a reference to a const field.,
        Category: Antithesis.Catalog,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    }
  ]
}