<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!-- Antithesis runs Linux containers, so we are not targeting .NET Framework (or .NET Standard <= 2.0). -->
        <!-- .NET 6 added System.Random.Shared and System.Text.Json.Nodes.JsonObject which are both used by this library. -->
        <!-- To replace / substitute those APIs for .NET Standard 2.1+ should we later need to target it: -->
        <!-- 1. System.Random.Shared would require implementing our own thread-safe Random: -->
        <!--    https://devblogs.microsoft.com/dotnet/getting-random-numbers-in-a-thread-safe-way/ -->
        <!--    https://andrewlock.net/building-a-thread-safe-random-implementation-for-dotnet-framework/ -->
        <!-- 2. System.Text.Json.Nodes.JsonObject would required a PackageReference conditional on the target framework. -->
        <TargetFramework>net6.0</TargetFramework>

        <ImplicitUsings>disable</ImplicitUsings>
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

        <!-- Repeatable Package restores -->
        <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>

        <!-- XML code documentation -->
        <GenerateDocumentationFile>true</GenerateDocumentationFile>

        <!-- SourceLink: https://devblogs.microsoft.com/dotnet/producing-packages-with-source-link/ -->
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>

        <!-- NuGet Symbols Package: https://learn.microsoft.com/en-us/nuget/create-packages/symbol-packages-snupkg -->
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <!-- NuGet Best Practices: https://learn.microsoft.com/en-us/nuget/create-packages/package-authoring-best-practices -->
        <Authors>Antithesis Operations LLC</Authors>
        <Copyright>Copyright (c) 2025 Antithesis Operations LLC</Copyright>
        <Description>This package contains types for .NET applications to use to integrate with Antithesis.</Description>
        <PackageIcon>icon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
    </PropertyGroup>

    <!-- Deterministic Builds -->
    <PropertyGroup Condition=" '$(GITHUB_ACTIONS)' == 'true' ">
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    </PropertyGroup>

    <ItemGroup>
        <!-- 1. PrivateAssets="none" allows our SourceGenerators to become transitive analyzers for consumers of this package. -->
        <!--    https://github.com/NuGet/Home/issues/3697#issuecomment-342983009 -->
        <!-- 2. If OutputItemType="Analyzer" is added, our SourceGenerators will run with this project, which at best is both -->
        <!--    unneccessary and confusing. -->
        <!-- 3. If ReferenceOutputAssembly="false" is added, "dotnet pack" will not add the Package Dependency at all. -->
        <ProjectReference Include="../Antithesis.SDK.SourceGenerators/Antithesis.SDK.SourceGenerators.csproj"
            PrivateAssets="none" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="9.0.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
            <_Parameter1>$(MSBuildProjectName).Benchmarks</_Parameter1>
        </AssemblyAttribute>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
            <_Parameter1>$(MSBuildProjectName).Tests</_Parameter1>
        </AssemblyAttribute>
    </ItemGroup>

    <ItemGroup>
        <Using Include="System" />
        <Using Include="System.Collections.Generic" />
        <Using Include="System.Linq" />
    </ItemGroup>

    <ItemGroup>
        <None Include="../../icon.png" Pack="true" PackagePath="" />
        <None Include="../../LICENSE" Pack="true" PackagePath="" />
        <None Include="../../README.md" Pack="true" PackagePath="" />
    </ItemGroup>

</Project>